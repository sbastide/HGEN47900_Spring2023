setwd("C:/Users/bseba/Desktop/HGEN 47900 1 (Spring 2023)")
count_table <- data.table::fread("ChIPseq_count_table.txt", data.table = FALSE) %>%
tibble::column_to_rownames("Geneid") %>%
select(-c(1:5))
setwd("C:/Users/bseba/Desktop/HGEN 47900 1 (Spring 2023)/Lab1")
count_table <- data.table::fread("ChIPseq_count_table.txt", data.table = FALSE) %>%
tibble::column_to_rownames("Geneid") %>%
select(-c(1:5))
options('homer_path' = '/data/programms/homer')
library(dplyr)
library(tidyr)
library(ggplot2)
library(edgeR)
library(marge)
library(rtracklayer)
library(GenomicRanges)
BiocManager::install("GenomicRangers")
BiocManager::install("GenomicRanges")
BiocManager::install("rtracklayer")
count_table <- data.table::fread("ChIPseq_count_table.txt", data.table = FALSE) %>%
tibble::column_to_rownames("Geneid") %>%
select(-c(1:5))
colnames(count_table) <- colnames(count_table) %>% gsub("aln/", "", .) %>% gsub("[.]bam", "", .)
metadata <- colnames(count_table) %>%
gsub("2_5", "2.5", .) %>%
strsplit(split = "_") %>%
# This takes care of the reChIP names
lapply(function(x) if(length(x) == 5) {
x[1] <- paste(x[1], x[2], sep = "_")
return(x[-2])
} else {return(x)}) %>%
do.call(rbind, .) %>%
as.data.frame() %>%
magrittr::set_colnames(c("IP", "Genotype", "Celltype", "Replicate")) %>%
tibble::add_column(Sample = colnames(count_table))
groups       <- metadata %>% select(1:3) %>% apply(1, paste, collapse = "_") %>% factor()
edgeR_object <- DGEList(counts = count_table, group = groups)
edgeR_object <- calcNormFactors(edgeR_object, method = "TMM")
edgeR_object <- calcNormFactors(edgeR_object, method = "TMM")
TMM_table <- cpm(edgeR_object) # This actually gets TMMs, not CPMs.
TMM_by_condition <- levels(groups) %>%
lapply(function(condition) {
x <- grep(condition, colnames(TMM_table))
if(length(x) > 1) {
return(rowMeans(TMM_table[,x]))
} else {
return(TMM_table[,x])
}
}) %>% do.call(cbind, .)
saveRDS(TMM_by_condition, "TMM_by_condition_unfiltered_peaks.Rds")
count_table <- data.table::fread("ChIPseq_count_table_q10.txt", data.table = FALSE) %>%
tibble::column_to_rownames("Geneid") %>%
select(-c(1:5))
colnames(count_table) <- colnames(count_table) %>% gsub("aln/", "", .) %>% gsub("[.]bam", "", .)
metadata <- colnames(count_table) %>%
gsub("2_5", "2.5", .) %>%
strsplit(split = "_") %>%
# This takes care of the reChIP names
lapply(function(x) if(length(x) == 5) {
x[1] <- paste(x[1], x[2], sep = "_")
return(x[-2])
} else {return(x)}) %>%
do.call(rbind, .) %>%
as.data.frame() %>%
magrittr::set_colnames(c("IP", "Genotype", "Celltype", "Replicate")) %>%
tibble::add_column(Sample = colnames(count_table))
groups       <- metadata %>% select(1:3) %>% apply(1, paste, collapse = "_") %>% factor()
edgeR_object <- DGEList(counts = count_table, group = groups)
edgeR_object <- calcNormFactors(edgeR_object, method = "TMM")
TMM_table <- cpm(edgeR_object) # This actually gets TMMs, not CPMs.
TMM_by_condition <- levels(groups) %>%
lapply(function(condition) {
x <- grep(condition, colnames(TMM_table))
if(length(x) > 1) {
return(rowMeans(TMM_table[,x]))
} else {
return(TMM_table[,x])
}
}) %>% do.call(cbind, .)
colnames(TMM_by_condition) <- levels(groups)
saveRDS(TMM_by_condition, "TMM_by_condition_q10_unfiltered_peaks.Rds")
BiocManager::install("marge")
devtools::install_github('robertamezquita/marge', ref = 'master')
install.packages("devtools")
devtools::install_github('robertamezquita/marge', ref = 'master')
install.packages("R.utils")
