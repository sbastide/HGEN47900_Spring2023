setwd("HGEN 47900 1 (Spring 2023)/Lab0")
setwd("C:/Users/bseba/Desktop/HGEN 47900 1 (Spring 2023)/Lab0")
knitr::opts_chunk$set(echo = TRUE)
count_table <- read.table("Danio_rerio_time_course_White2017.csv",
sep = ",", header = TRUE, stringsAsFactors = FALSE)
head(dat)
head(count_table)
count_table[1:5, 1:5]
library(dplyr)
library(dplyr)
library(ggplot2)
library(dplyr)
library(tidyr)
count_table <- count_table %>%
select(-Gene_ID) %>%
replace_na(replace = 0)
count_table <- count_table %>%
select(-Gene_ID) %>%
replace_na(replace = list(0))
View(count_table)
?replace_na
count_table <- count_table %>%
select(-Gene_ID) %>%
replace(is.na(.), 0)
count_table <- read.table("Danio_rerio_time_course_White2017.csv",
sep = ",", header = TRUE, stringsAsFactors = FALSE)
count_table <- count_table %>%
select(-Gene_ID) %>%
replace(is.na(.), 0)
View(count_table)
count_table[1:5, 1:5]
count_table_long <- count_table %>%
pivot_longer(names_to = "stage",
values_to = "expression")
?pivot_longer
count_table_long <- count_table %>%
pivot_longer(cols = -Gene_Name,
names_to = "stage",
values_to = "expression")
View(count_table_long)
# Option 2: using reshape2::melt()
count_table_long <- count_table %>%
tibble::column_to_rownames("Gene_Name") %>%
as.matrix %>%
reshape2::melt()
# Option 1: using tidyr::pivot_longer()
count_table_long <- count_table %>%
pivot_longer(cols = -Gene_Name,
names_to = "stage",
values_to = "expression")
# Option 2: using reshape2::melt()
count_table_long <- count_table %>%
tibble::column_to_rownames("Gene_Name") %>%
as.matrix %>%
reshape2::melt()
?spread()
?gather
# Option 3: using tidyr::gather() (deprecated but still used by some people)
count_table_long <- count_table %>%
gather(key = "stage", value = "expression", -Gene_name)
# Option 3: using tidyr::gather() (deprecated but still used by some people)
count_table_long <- count_table %>%
gather(key = "stage", value = "expression", -c(Gene_name))
# Option 3: using tidyr::gather() (deprecated but still used by some people)
count_table_long <- count_table %>%
gather(key = "stage", value = "expression", -Gene_Name)
head(count_table_long)
count_table_long %>%
filter(Gene_Name %in% c("fgf8a", "fgf8b"))
count_table_long %>%
filter(Gene_Name %in% c("fgf8a", "fgf8b")) %>%
ggplot() +
geom_point(aes(x = stage, y = log10(expression), col = Gene_Name))
p <- count_table_long %>%
filter(Gene_Name %in% c("fgf8a", "fgf8b")) %>%
ggplot() +
geom_point(aes(x = stage, y = log10(expression), col = Gene_Name))
p
p +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 0))
p +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p +
geom_line(aes(x = stage, y = Log10(expression), col = Gene_Name, group = Gene_Name)) +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p +
geom_line(aes(x = stage, y = kog10(expression), col = Gene_Name, group = Gene_Name)) +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p +
geom_line(aes(x = stage, y = log10(expression), col = Gene_Name, group = Gene_Name)) +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
count_table_long <- count_table_long %>%
mutate(stage = factor(stage, colnames(count_table)[-1]))
count_table_long %>%
filter(Gene_Name %in% c("fgf8a", "fgf8b")) %>%
ggplot() +
geom_point(aes(x = stage, y = log10(expression), col = Gene_Name)) +
geom_line(aes(x = stage, y = log10(expression), col = Gene_Name, group = Gene_Name)) +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
count_table_long %>%
filter(Gene_Name %in% c("fgf8a", "fgf8b")) %>%
ggplot() +
geom_point(aes(x = stage, y = log10(expression), col = Gene_Name)) +
geom_line(aes(x = stage, y = log10(expression), col = Gene_Name, group = Gene_Name)) +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c("gold", "royalblue"))
count_table_long %>%
filter(Gene_Name %in% c("fgf8a", "fgf8b")) %>%
ggplot() +
geom_point(aes(x = stage, y = log10(expression), col = Gene_Name)) +
geom_line(aes(x = stage, y = log10(expression), col = Gene_Name, group = Gene_Name)) +
xlab("Developmental stage") +
ylab("Log10(FPKM)") +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_color_manual(values = c("goldenrod", "royalblue"))
